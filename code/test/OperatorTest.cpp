#include "../LOGO.h"
#ifdef OPERATORTEST
START_PROGRAM
MAKE x = LIST[NUMBER:1, NUMBER : 2, NUMBER : 3, WORD : "Hello", WORD : "World", WORD : "Foo"]
MAKE x2 = LIST[NUMBER:1, NUMBER : 2, NUMBER : 3, WORD : "Hello", WORD : "World", WORD : "Foo"]
MAKE y = LIST[NUMBER:3, NUMBER : 2, NUMBER : 1, ARRAY{WORD :"INNERONE", NUMBER : 5, WORD : "ENDINNER" }, WORD : "World", WORD : "Hello", WORD : "Bar"]
MAKE S = SENTENCE(WORD: "DUST", WORD: "IN", WORD: "THE", WORD: "WIND")
MAKE S2 = S
MAKE S3 = SENTENCE(WORD: "WIND", WORD : "IN", WORD : "THE", WORD : "DUST")
MAKE A = ARRAY{ WORD:"INNERONE", NUMBER : 5, WORD : "ENDINNER" }
MAKE A2 = ARRAY{ WORD:"INNERONE", NUMBER : 10, WORD : "ENDINNER" }
MAKE A3 = ARRAY {WORD : "INNERONE", NUMBER : 5, NUMBER: 10, WORD : "ENDINNER"}
MAKE N = NUMBER: 1
MAKE W = WORD: "HELLO"
MAKE B = BOOLEAN: TRUE
SHOW: WORD: "COMPARING NUMBER TYPES"
SHOW: WORD: "COMPARING CONSTANTS"
IF (NUMBER: 1) == (NUMBER: 1) DO
	SHOW: WORD: "--PASSED =="
ELSE 
	SHOW: WORD: "--FAILED =="
END
IF (NUMBER: 1) != (NUMBER: 2) DO
	SHOW : WORD: "--PASSED !="
ELSE
	SHOW : WORD: "--FAILED !="
END
IF (NUMBER: 1) > (NUMBER: 0) DO
	SHOW : WORD: "--PASSED >"
ELSE
	SHOW : WORD: "--FAILED >"
END
IF AND(BOOLEAN: (NUMBER: 1) >= (NUMBER: 0), BOOLEAN: (NUMBER: 1) >= (NUMBER: 1)) DO
	SHOW : WORD: "--PASSED >="
ELSE
	SHOW : WORD: "--FAILED >="
END
IF (NUMBER: 1) < (NUMBER: 2) DO
	SHOW : WORD: "--PASSED <"
ELSE
	SHOW : WORD: "--FAILED <"
END
IF AND(BOOLEAN : (NUMBER: 0) <= (NUMBER : 1), BOOLEAN : (NUMBER : 0) <= (NUMBER : 0)) DO
	SHOW : WORD: "--PASSED <="
ELSE
	SHOW : WORD: "--FAILED <="
END

SHOW: WORD: "COMPARING VARIABLES, CONSTANTS AND TEMPORARY OBJECTS"
MAKE N2 = ITEM({ 1 }, x)
IF N == N2 DO
	SHOW: WORD: "--PASSED =="
ELSE
	SHOW: WORD: "--FAILED =="
END
IF DIFFERENCE(N, NUMBER: 1) != N2 DO
	SHOW : WORD: "--PASSED !="
ELSE
	SHOW : WORD: "--FAILED !="
END
IF N > DIFFERENCE(N2, NUMBER: 1) DO
	SHOW : WORD: "--PASSED >"
ELSE
	SHOW : WORD: "--FAILED >"
END
IF AND(BOOLEAN : SUM(N, NUMBER:1) >= (NUMBER : 0), BOOLEAN : N >= N2) DO
	SHOW : WORD: "--PASSED >="
ELSE
	SHOW : WORD: "--FAILED >="
END
IF ITEM({ 1 }, x) < SUM(N, NUMBER: 1) DO
	SHOW : WORD: "--PASSED <"
ELSE
	SHOW : WORD: "--FAILED <"
END
IF AND(BOOLEAN : (NUMBER: 0) <= SUM(N, NUMBER: 1), BOOLEAN : ITEM({ 1 }, x) <= ITEM({ 1 }, x)) DO
	SHOW : WORD: "--PASSED <="
ELSE
	SHOW : WORD: "--FAILED <="
END
SHOW: WORD: "ASSIGNING COMPARISON RESULTS"
MAKE R1 = BOOLEAN: (N == N2)
IF R1 != (NUMBER: 1) DO
	SHOW : WORD: "--PASSED 1"
ELSE
	SHOW : WORD: "--FAILED 1"
END
IF (BOOLEAN: (N == N2)) != (NUMBER: 1) DO
	SHOW : WORD: "--PASSED 2"
ELSE
	SHOW : WORD: "--FAILED 2"
END
SHOW: WORD: "COMPARING WORDS"
IF (WORD : "HELLO") == W DO
	SHOW : WORD: "--PASSED =="
ELSE
	SHOW : WORD: "--FAILED =="
END
IF W > ITEM({ 5 }, x) DO
	SHOW : WORD: "--PASSED >"
ELSE
	SHOW : WORD: "--FAILED >"
END
SHOW : WORD: "COMPARING BOOLEANS"
IF B == (BOOLEAN: TRUE) DO
	SHOW : WORD: "--PASSED =="
ELSE
	SHOW : WORD: "--FAILED =="
END
IF R1 > NOT(B) DO
	SHOW : WORD: "--PASSED >"
ELSE
	SHOW : WORD: "--FAILED >"
END
SHOW: WORD: "COMPARING LISTS"
IF x == LIST[NUMBER:1, NUMBER : 2, NUMBER : 3, WORD : "Hello", WORD : "World", WORD : "Foo"] DO
	SHOW : WORD: "--PASSED =="
ELSE
	SHOW : WORD: "--FAILED =="
END
IF y > x DO
	SHOW : WORD: "--PASSED >"
ELSE
	SHOW : WORD: "--FAILED >"
END
SHOW: WORD: "COMPARING ARRAYS"
IF A == ITEM({ 4 }, y) DO
	SHOW : WORD: "--PASSED =="
ELSE
	SHOW : WORD: "--FAILED =="
END
IF A != A2 DO 
	SHOW : WORD: "--PASSED !="
ELSE
	SHOW : WORD: "--FAILED !="
END
IF A3 > A DO 
	SHOW : WORD: "--PASSED >"
ELSE
	SHOW : WORD: "--FAILED >"
END
SHOW: WORD: "COMPARING SENTENCES"
IF S == S2 DO
	SHOW : WORD: "--PASSED =="
ELSE
	SHOW : WORD: "--FAILED =="
END
IF S != S3 DO
	SHOW : WORD: "--PASSED !="
ELSE
	SHOW : WORD: "--FAILED !="
END
IF S > SENTENCE(WORD:"FOOBAR") DO
	SHOW : WORD: "--PASSED >"
ELSE
	SHOW : WORD: "--FAILED >"
END
; system("pause");
END_PROGRAM
#endif