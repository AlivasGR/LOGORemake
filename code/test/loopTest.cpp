#include "../LOGO.h"
#ifdef LOOPTEST
START_PROGRAM
MAKE x = LIST[NUMBER:1, NUMBER : 2, NUMBER : 3, WORD : "Hello", WORD : "World", WORD : "Foo"]
MAKE y = LIST[NUMBER:3, NUMBER : 2, NUMBER : 1, LIST[WORD:"INNERONE", NUMBER : 5, WORD : "ENDINNER"], WORD : "World", WORD : "Hello", WORD : "Bar"]
MAKE A = ARRAY{NUMBER: 1, WORD: "HELLO", BOOLEAN: TRUE}
MAKE S = SENTENCE(WORD:"DUST", WORD:"IN", WORD:"THE", WORD:"WIND")
SHOW: WORD: "FOREACH"
SHOW: WORD: "LOOP ON LIST"
FOREACH x DO
	SHOW : ELEM
	SHOW : WORD:"*****"
	FOREACH y DO
		SHOW : ELEM
	END
	SHOW : WORD: "====="
END
SHOW: WORD: "LOOP ON ARRAY"
FOREACH A DO
	SHOW: ELEM
END
SHOW: WORD: "LOOP ON SENTENCE"
FOREACH S DO
	SHOW: ELEM
END
SHOW : WORD: "END FOREACH"
SHOW : WORD : "REPEAT"
REPEAT 6 TIMES DO
	SHOW : WORD: "SHOWING AN ITEM OF LIST"
	SHOW : ITEM({ REPCOUNT }, x)
	IF REPCOUNT == (NUMBER : 4) DO
		SHOW : WORD: "INNER LIST TESTING - INNER LOOP OTHER TYPE"
		SHOW : ITEM({ REPCOUNT, NUMBER: 1 }, y)
		FOREACH ITEM({ 4 }, y) DO
			SHOW : ELEM
		END
		SHOW : WORD: "END INNER TESTING"
	END
END
SHOW : WORD: "END REPEAT"
SHOW : WORD : "TRIPLE LOOP"
MAKE I = NUMBER : 1
MAKE J = NUMBER : 10
MAKE K = NUMBER : 1
REPEAT 10 TIMES DO
	ASSIGN K = REPCOUNT
	ASSIGN J = K
	SHOW : WORD:"LOOP:"
	SHOW : REPCOUNT
	SHOW : WORD: "------"
	REPEAT WHILE I <= J DO
		SHOW : WORD: "========="
		REPEAT WHILE J >= I DO
			PRINTOUT(int)J << " "
			ASSIGN J = DIFFERENCE(J, NUMBER: 1)
		END
		PRINTOUT BR
		ASSIGN J = K
		ASSIGN I = SUM(I, NUMBER: 1)
	END
	ASSIGN I = NUMBER: 1
	SHOW : WORD : "------"
END
SHOW : WORD: "END TRIPLE LOOP"
; system("pause")
END_PROGRAM
#endif